"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;












var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ValidationErrorDescription = _interopRequireDefault(require("./ValidationErrorDescription"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);} /**
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */ /**
 * The Debit model module.
 * @module Model/Debit
 * @version 1.35.1
 */var Debit = /*#__PURE__*/function () {/**
   * Constructs a new <code>Debit</code>.
   * Debits are used to fund transactions from your internal TransferZero balance.
   * @alias module:Model/Debit
   * @param toType {String} Describes what the debit is funding
   * @param toId {String} The ID of the resource the debit is funding
   */function Debit(toType, toId) {_classCallCheck(this, Debit);Debit.initialize(this, toType, toId);} /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */return _createClass(Debit, null, [{ key: "initialize", value: function initialize(obj, toType, toId) {
      obj['to_type'] = toType;
      obj['to_id'] = toId;
    }

    /**
     * Constructs a <code>Debit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Model/Debit} obj Optional instance to populate.
     * @return {module:Model/Debit} The populated <code>Debit</code> instance.
     */ }, { key: "constructFromObject", value:
    function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Debit();

        if (data.hasOwnProperty('amount')) {
          obj['amount'] = _ApiClient["default"].convertToType(data['amount'], 'Number');
        }
        if (data.hasOwnProperty('currency')) {
          obj['currency'] = _ApiClient["default"].convertToType(data['currency'], 'String');
        }
        if (data.hasOwnProperty('to_type')) {
          obj['to_type'] = _ApiClient["default"].convertToType(data['to_type'], 'String');
        }
        if (data.hasOwnProperty('to_id')) {
          obj['to_id'] = _ApiClient["default"].convertToType(data['to_id'], 'String');
        }
        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], Object);
        }
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'String');
        }
        if (data.hasOwnProperty('created_at')) {
          obj['created_at'] = _ApiClient["default"].convertToType(data['created_at'], 'Date');
        }
        if (data.hasOwnProperty('usd_amount')) {
          obj['usd_amount'] = _ApiClient["default"].convertToType(data['usd_amount'], 'Number');
        }
        if (data.hasOwnProperty('running_balance')) {
          obj['running_balance'] = _ApiClient["default"].convertToType(data['running_balance'], 'Number');
        }
        if (data.hasOwnProperty('errors')) {
          obj['errors'] = _ApiClient["default"].convertToType(data['errors'], { 'String': [_ValidationErrorDescription["default"]] });
        }
      }
      return obj;
    } }]);}();




/**
 * The amount to be debited from your account.  The \"amount\" parameter is optional - - if included, it must equal the amount required to fund the transaction. - if omitted, it will default to the amount required to fund the transaction. 
 * @member {Number} amount
 */
Debit.prototype['amount'] = undefined;

/**
 * The currency of the amount in 3-character alpha ISO 4217 currency format.  The \"currency\" parameter is optional - if omitted, it will default to the payin currency of the transaction. - it can be added in as an additional check to ensure that the expected currency is used. (an error will be given back if it does not match up with the payin currency of the transaction) 
 * @member {String} currency
 */
Debit.prototype['currency'] = undefined;

/**
 * Describes what the debit is funding
 * @member {String} to_type
 */
Debit.prototype['to_type'] = undefined;

/**
 * The ID of the resource the debit is funding
 * @member {String} to_id
 */
Debit.prototype['to_id'] = undefined;

/**
 * Metadata of account debit
 * @member {Object} metadata
 */
Debit.prototype['metadata'] = undefined;

/**
 * @member {String} id
 */
Debit.prototype['id'] = undefined;

/**
 * Date and time that the debit was created
 * @member {Date} created_at
 */
Debit.prototype['created_at'] = undefined;

/**
 * The amount to be debited from your account converted to USD 
 * @member {Number} usd_amount
 */
Debit.prototype['usd_amount'] = undefined;

/**
 * The total amount remaining in your account after the debit call 
 * @member {Number} running_balance
 */
Debit.prototype['running_balance'] = undefined;

/**
 * The fields that have some problems and don't pass validation
 * @member {Object.<String, Array.<module:Model/ValidationErrorDescription>>} errors
 */
Debit.prototype['errors'] = undefined;var _default = exports["default"] =






Debit;
//# sourceMappingURL=Debit.js.map