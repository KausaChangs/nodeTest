"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;












var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _FieldDescription = _interopRequireDefault(require("./FieldDescription"));
var _PaymentMethod = _interopRequireDefault(require("./PaymentMethod"));
var _PaymentMethodOppositeAllOf = _interopRequireDefault(require("./PaymentMethodOppositeAllOf"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);} /**
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */ /**
 * The PaymentMethodOpposite model module.
 * @module Model/PaymentMethodOpposite
 * @version 1.35.1
 */var PaymentMethodOpposite = /*#__PURE__*/function () {/**
   * Constructs a new <code>PaymentMethodOpposite</code>.
   * @alias module:Model/PaymentMethodOpposite
   * @implements module:Model/PaymentMethod
   * @implements module:Model/PaymentMethodOppositeAllOf
   */function PaymentMethodOpposite() {_classCallCheck(this, PaymentMethodOpposite);_PaymentMethod["default"].initialize(this);_PaymentMethodOppositeAllOf["default"].initialize(this);PaymentMethodOpposite.initialize(this);} /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */return _createClass(PaymentMethodOpposite, null, [{ key: "initialize", value: function initialize(obj) {
    }

    /**
     * Constructs a <code>PaymentMethodOpposite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Model/PaymentMethodOpposite} obj Optional instance to populate.
     * @return {module:Model/PaymentMethodOpposite} The populated <code>PaymentMethodOpposite</code> instance.
     */ }, { key: "constructFromObject", value:
    function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new PaymentMethodOpposite();
        _PaymentMethod["default"].constructFromObject(data, obj);
        _PaymentMethodOppositeAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('provider')) {
          obj['provider'] = _ApiClient["default"].convertToType(data['provider'], 'String');
        }
        if (data.hasOwnProperty('otc_permitted')) {
          obj['otc_permitted'] = _ApiClient["default"].convertToType(data['otc_permitted'], 'Boolean');
        }
        if (data.hasOwnProperty('details')) {
          obj['details'] = _ApiClient["default"].convertToType(data['details'], ['String']);
        }
        if (data.hasOwnProperty('default')) {
          obj['default'] = _ApiClient["default"].convertToType(data['default'], 'Boolean');
        }
        if (data.hasOwnProperty('fields')) {
          obj['fields'] = _ApiClient["default"].convertToType(data['fields'], { 'String': _FieldDescription["default"] });
        }
        if (data.hasOwnProperty('opposites')) {
          obj['opposites'] = _ApiClient["default"].convertToType(data['opposites'], [_PaymentMethod["default"]]);
        }
      }
      return obj;
    } }]);}();




/**
 * Details currency and type of payment.
 * @member {String} type
 */
PaymentMethodOpposite.prototype['type'] = undefined;

/**
 * Identifies the payment provider.
 * @member {String} provider
 */
PaymentMethodOpposite.prototype['provider'] = undefined;

/**
 * Are over the counter transactions permitted?
 * @member {Boolean} otc_permitted
 */
PaymentMethodOpposite.prototype['otc_permitted'] = undefined;

/**
 * Fields required to make the payment depending on type.
 * @member {Array.<String>} details
 */
PaymentMethodOpposite.prototype['details'] = undefined;

/**
 * Boolean revealing whether this is the default payout method. Only present on payout methods
 * @member {Boolean} default
 */
PaymentMethodOpposite.prototype['default'] = undefined;

/**
 * The fields needed for payments with this payment method with details on validation requirements
 * @member {Object.<String, module:Model/FieldDescription>} fields
 */
PaymentMethodOpposite.prototype['fields'] = undefined;

/**
 * List of all providers that can be used in conjunction with the main provider
 * @member {Array.<module:Model/PaymentMethod>} opposites
 */
PaymentMethodOpposite.prototype['opposites'] = undefined;


// Implement PaymentMethod interface:
/**
 * Details currency and type of payment.
 * @member {String} type
 */
_PaymentMethod["default"].prototype['type'] = undefined;
/**
 * Identifies the payment provider.
 * @member {String} provider
 */
_PaymentMethod["default"].prototype['provider'] = undefined;
/**
 * Are over the counter transactions permitted?
 * @member {Boolean} otc_permitted
 */
_PaymentMethod["default"].prototype['otc_permitted'] = undefined;
/**
 * Fields required to make the payment depending on type.
 * @member {Array.<String>} details
 */
_PaymentMethod["default"].prototype['details'] = undefined;
/**
 * Boolean revealing whether this is the default payout method. Only present on payout methods
 * @member {Boolean} default
 */
_PaymentMethod["default"].prototype['default'] = undefined;
/**
 * The fields needed for payments with this payment method with details on validation requirements
 * @member {Object.<String, module:Model/FieldDescription>} fields
 */
_PaymentMethod["default"].prototype['fields'] = undefined;
// Implement PaymentMethodOppositeAllOf interface:
/**
 * List of all providers that can be used in conjunction with the main provider
 * @member {Array.<module:Model/PaymentMethod>} opposites
 */
_PaymentMethodOppositeAllOf["default"].prototype['opposites'] = undefined;var _default = exports["default"] =




PaymentMethodOpposite;
//# sourceMappingURL=PaymentMethodOpposite.js.map