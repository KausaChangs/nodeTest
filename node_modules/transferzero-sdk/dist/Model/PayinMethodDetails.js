"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;












var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _PayinMethodDetailsBTC = _interopRequireDefault(require("./PayinMethodDetailsBTC"));
var _PayinMethodDetailsMobile = _interopRequireDefault(require("./PayinMethodDetailsMobile"));
var _PayinMethodDetailsNGNBank = _interopRequireDefault(require("./PayinMethodDetailsNGNBank"));
var _PayoutMethodCountryEnum = _interopRequireDefault(require("./PayoutMethodCountryEnum"));
var _PayoutMethodMobileProviderEnum = _interopRequireDefault(require("./PayoutMethodMobileProviderEnum"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);} /**
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */ /**
 * The PayinMethodDetails model module.
 * @module Model/PayinMethodDetails
 * @version 1.35.1
 */var PayinMethodDetails = /*#__PURE__*/function () {/**
   * Constructs a new <code>PayinMethodDetails</code>.
   * Fields needed by the payment processor. Depends on the chose payin type.  See the appropriate model details for more info:  - &#x60;NGN::Bank&#x60;: see [&#x60;PayinMethodDetailsNGNBank&#x60;](#model-PayinMethodDetailsNGNBank) - &#x60;GHS::Mobile&#x60;: see [&#x60;PayinMethodDetailsMobile&#x60;](#model-PayinMethodDetailsMobile) - &#x60;UGX::Mobile&#x60;: see [&#x60;PayinMethodDetailsMobile&#x60;](#model-PayinMethodDetailsMobile)  Note that some payin processors don&#39;t require additional input, these include &#x60;lhv&#x60; through &#x60;EUR::Bank&#x60; and &#x60;GBP::Bank&#x60;. Some providers like &#x60;providus&#x60; also have all of their fields set as optional, so you might not want to set any values. To use these providers please set this value to &#x60;{}&#x60; (an empty hash) 
   * @alias module:Model/PayinMethodDetails
   * @implements module:Model/PayinMethodDetailsNGNBank
   * @implements module:Model/PayinMethodDetailsMobile
   * @implements module:Model/PayinMethodDetailsBTC
   */function PayinMethodDetails() {_classCallCheck(this, PayinMethodDetails);_PayinMethodDetailsNGNBank["default"].initialize(this);_PayinMethodDetailsMobile["default"].initialize(this);_PayinMethodDetailsBTC["default"].initialize(this);PayinMethodDetails.initialize(this);} /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */return _createClass(PayinMethodDetails, null, [{ key: "initialize", value: function initialize(obj) {
    }

    /**
     * Constructs a <code>PayinMethodDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Model/PayinMethodDetails} obj Optional instance to populate.
     * @return {module:Model/PayinMethodDetails} The populated <code>PayinMethodDetails</code> instance.
     */ }, { key: "constructFromObject", value:
    function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new PayinMethodDetails();
        _PayinMethodDetailsNGNBank["default"].constructFromObject(data, obj);
        _PayinMethodDetailsMobile["default"].constructFromObject(data, obj);
        _PayinMethodDetailsBTC["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('payment_method')) {
          obj['payment_method'] = _ApiClient["default"].convertToType(data['payment_method'], 'String');
        }
        if (data.hasOwnProperty('redirect_url')) {
          obj['redirect_url'] = _ApiClient["default"].convertToType(data['redirect_url'], 'String');
        }
        if (data.hasOwnProperty('phone_number')) {
          obj['phone_number'] = _ApiClient["default"].convertToType(data['phone_number'], 'String');
        }
        if (data.hasOwnProperty('mobile_provider')) {
          obj['mobile_provider'] = _PayoutMethodMobileProviderEnum["default"].constructFromObject(data['mobile_provider']);
        }
        if (data.hasOwnProperty('country')) {
          obj['country'] = _PayoutMethodCountryEnum["default"].constructFromObject(data['country']);
        }
        if (data.hasOwnProperty('otp')) {
          obj['otp'] = _ApiClient["default"].convertToType(data['otp'], 'String');
        }
        if (data.hasOwnProperty('refund_address')) {
          obj['refund_address'] = _ApiClient["default"].convertToType(data['refund_address'], 'String');
        }
      }
      return obj;
    } }]);}();




/**
 * The payment method which the sender will use to make the payments. Options are `bank`, `card` or you can leave empty to support both.
 * @member {String} payment_method
 */
PayinMethodDetails.prototype['payment_method'] = undefined;

/**
 * This is where the sender should be redirected back when the payment has been finished
 * @member {String} redirect_url
 */
PayinMethodDetails.prototype['redirect_url'] = undefined;

/**
 * The phone number where the funds should be collected from
 * @member {String} phone_number
 */
PayinMethodDetails.prototype['phone_number'] = undefined;

/**
 * @member {module:Model/PayoutMethodMobileProviderEnum} mobile_provider
 */
PayinMethodDetails.prototype['mobile_provider'] = undefined;

/**
 * @member {module:Model/PayoutMethodCountryEnum} country
 */
PayinMethodDetails.prototype['country'] = undefined;

/**
 * The OTP that the sender received in otp verified ussd popup ux flow.
 * @member {String} otp
 */
PayinMethodDetails.prototype['otp'] = undefined;

/**
 * Please make sure the refund_address is a valid BTC address belonging to the sender, as that is going to be used in case the transaction has to be refunded.
 * @member {String} refund_address
 */
PayinMethodDetails.prototype['refund_address'] = undefined;


// Implement PayinMethodDetailsNGNBank interface:
/**
 * The payment method which the sender will use to make the payments. Options are `bank`, `card` or you can leave empty to support both.
 * @member {String} payment_method
 */
_PayinMethodDetailsNGNBank["default"].prototype['payment_method'] = undefined;
/**
 * This is where the sender should be redirected back when the payment has been finished
 * @member {String} redirect_url
 */
_PayinMethodDetailsNGNBank["default"].prototype['redirect_url'] = undefined;
// Implement PayinMethodDetailsMobile interface:
/**
 * The phone number where the funds should be collected from
 * @member {String} phone_number
 */
_PayinMethodDetailsMobile["default"].prototype['phone_number'] = undefined;
/**
 * @member {module:Model/PayoutMethodMobileProviderEnum} mobile_provider
 */
_PayinMethodDetailsMobile["default"].prototype['mobile_provider'] = undefined;
/**
 * @member {module:Model/PayoutMethodCountryEnum} country
 */
_PayinMethodDetailsMobile["default"].prototype['country'] = undefined;
/**
 * The OTP that the sender received in otp verified ussd popup ux flow.
 * @member {String} otp
 */
_PayinMethodDetailsMobile["default"].prototype['otp'] = undefined;
// Implement PayinMethodDetailsBTC interface:
/**
 * Please make sure the refund_address is a valid BTC address belonging to the sender, as that is going to be used in case the transaction has to be refunded.
 * @member {String} refund_address
 */
_PayinMethodDetailsBTC["default"].prototype['refund_address'] = undefined;var _default = exports["default"] =




PayinMethodDetails;
//# sourceMappingURL=PayinMethodDetails.js.map