{"version":3,"file":"Transaction.js","names":["_ApiClient","_interopRequireDefault","require","_PayinMethod","_Recipient","_Sender","_TransactionState","_TransactionTraits","_ValidationErrorDescription","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","Transaction","inputCurrency","sender","recipients","initialize","value","constructFromObject","data","hasOwnProperty","ApiClient","convertToType","PayinMethod","Sender","Recipient","TransactionTraits","TransactionState","ValidationErrorDescription","undefined","_default","exports"],"sources":["../../src/Model/Transaction.js"],"sourcesContent":["/**\n * TransferZero API\n * Reference documentation for the TransferZero API V1\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport PayinMethod from './PayinMethod';\nimport Recipient from './Recipient';\nimport Sender from './Sender';\nimport TransactionState from './TransactionState';\nimport TransactionTraits from './TransactionTraits';\nimport ValidationErrorDescription from './ValidationErrorDescription';\n\n/**\n * The Transaction model module.\n * @module Model/Transaction\n * @version 1.35.1\n */\nclass Transaction {\n    /**\n     * Constructs a new <code>Transaction</code>.\n     * The template of transactions are the following: &#x60;&#x60;&#x60;JSON {   \\&quot;input_currency\\&quot;: // currency to pay in,   \\&quot;sender\\&quot;:{     // details of the sender   },   \\&quot;recipients\\&quot;:[     {         \\&quot;requested_amount\\&quot;: // the amount to pay out,         \\&quot;requested_currency\\&quot;: // the currency of the amount,         \\&quot;payout_method\\&quot;:{           \\&quot;type\\&quot;: // method of the payout,           \\&quot;details\\&quot;:{               // details of the recipient           }         }     }   ],   \\&quot;metadata\\&quot;: // optional metadata } &#x60;&#x60;&#x60;\n     * @alias module:Model/Transaction\n     * @param inputCurrency {String} The input currency describes what currency the transaction will be paid in (3-character alpha ISO 4217 currency format). For example if you wish to create an EUR to NGN transaction then input currency should be set to EUR.\n     * @param sender {module:Model/Sender} \n     * @param recipients {Array.<module:Model/Recipient>} The details of where the payment should go. although transactions can support paying out multiple recipients, usually one is provided. \n     */\n    constructor(inputCurrency, sender, recipients) { \n        \n        Transaction.initialize(this, inputCurrency, sender, recipients);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj, inputCurrency, sender, recipients) { \n        obj['input_currency'] = inputCurrency;\n        obj['sender'] = sender;\n        obj['recipients'] = recipients;\n    }\n\n    /**\n     * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:Model/Transaction} obj Optional instance to populate.\n     * @return {module:Model/Transaction} The populated <code>Transaction</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new Transaction();\n\n            if (data.hasOwnProperty('input_currency')) {\n                obj['input_currency'] = ApiClient.convertToType(data['input_currency'], 'String');\n            }\n            if (data.hasOwnProperty('payin_methods')) {\n                obj['payin_methods'] = ApiClient.convertToType(data['payin_methods'], [PayinMethod]);\n            }\n            if (data.hasOwnProperty('metadata')) {\n                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);\n            }\n            if (data.hasOwnProperty('sender')) {\n                obj['sender'] = Sender.constructFromObject(data['sender']);\n            }\n            if (data.hasOwnProperty('recipients')) {\n                obj['recipients'] = ApiClient.convertToType(data['recipients'], [Recipient]);\n            }\n            if (data.hasOwnProperty('traits')) {\n                obj['traits'] = TransactionTraits.constructFromObject(data['traits']);\n            }\n            if (data.hasOwnProperty('state')) {\n                obj['state'] = TransactionState.constructFromObject(data['state']);\n            }\n            if (data.hasOwnProperty('input_amount')) {\n                obj['input_amount'] = ApiClient.convertToType(data['input_amount'], 'Number');\n            }\n            if (data.hasOwnProperty('payin_reference')) {\n                obj['payin_reference'] = ApiClient.convertToType(data['payin_reference'], 'String');\n            }\n            if (data.hasOwnProperty('paid_amount')) {\n                obj['paid_amount'] = ApiClient.convertToType(data['paid_amount'], 'Number');\n            }\n            if (data.hasOwnProperty('due_amount')) {\n                obj['due_amount'] = ApiClient.convertToType(data['due_amount'], 'Number');\n            }\n            if (data.hasOwnProperty('created_at')) {\n                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');\n            }\n            if (data.hasOwnProperty('expires_at')) {\n                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Date');\n            }\n            if (data.hasOwnProperty('external_id')) {\n                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');\n            }\n            if (data.hasOwnProperty('id')) {\n                obj['id'] = ApiClient.convertToType(data['id'], 'String');\n            }\n            if (data.hasOwnProperty('errors')) {\n                obj['errors'] = ApiClient.convertToType(data['errors'], {'String': [ValidationErrorDescription]});\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * The input currency describes what currency the transaction will be paid in (3-character alpha ISO 4217 currency format). For example if you wish to create an EUR to NGN transaction then input currency should be set to EUR.\n * @member {String} input_currency\n */\nTransaction.prototype['input_currency'] = undefined;\n\n/**\n * Allows setting alternative collections, where funding the transaction is done through alternative means and not via account balance.  For more information please see [Collections from senders](https://docs.transferzero.com/docs/additional-features/#collections-from-senders) in the API documentation\n * @member {Array.<module:Model/PayinMethod>} payin_methods\n */\nTransaction.prototype['payin_methods'] = undefined;\n\n/**\n * Additional metadata to store on the transaction. If you widh to store your local transaction ID, you should add it here inside a `sendRef` field, and we will return this value back to you in the daily transaction reports.\n * @member {Object} metadata\n */\nTransaction.prototype['metadata'] = undefined;\n\n/**\n * @member {module:Model/Sender} sender\n */\nTransaction.prototype['sender'] = undefined;\n\n/**\n * The details of where the payment should go. although transactions can support paying out multiple recipients, usually one is provided. \n * @member {Array.<module:Model/Recipient>} recipients\n */\nTransaction.prototype['recipients'] = undefined;\n\n/**\n * @member {module:Model/TransactionTraits} traits\n */\nTransaction.prototype['traits'] = undefined;\n\n/**\n * @member {module:Model/TransactionState} state\n */\nTransaction.prototype['state'] = undefined;\n\n/**\n * The amount that was requested in the input currency\n * @member {Number} input_amount\n */\nTransaction.prototype['input_amount'] = undefined;\n\n/**\n * The reference number that has to be provided in case the transaction is not funded through account balance\n * @member {String} payin_reference\n */\nTransaction.prototype['payin_reference'] = undefined;\n\n/**\n * The amount that was already paid in to the transaction\n * @member {Number} paid_amount\n */\nTransaction.prototype['paid_amount'] = undefined;\n\n/**\n * The amount needed to be paid in for the transaction to get funded\n * @member {Number} due_amount\n */\nTransaction.prototype['due_amount'] = undefined;\n\n/**\n * The time the transaction was created\n * @member {Date} created_at\n */\nTransaction.prototype['created_at'] = undefined;\n\n/**\n * The latest time when the transaction has to be funded, otherwise it will be cancelled\n * @member {Date} expires_at\n */\nTransaction.prototype['expires_at'] = undefined;\n\n/**\n * Optional ID that is supplied by partner linking it to the partner's own Transaction ID. Note: if present we will validate whether the sent ID is a duplicate in our system or not.\n * @member {String} external_id\n */\nTransaction.prototype['external_id'] = undefined;\n\n/**\n * @member {String} id\n */\nTransaction.prototype['id'] = undefined;\n\n/**\n * The fields that have some problems and don't pass validation\n * @member {Object.<String, Array.<module:Model/ValidationErrorDescription>>} errors\n */\nTransaction.prototype['errors'] = undefined;\n\n\n\n\n\n\nexport default Transaction;\n\n"],"mappings":";;;;;;;;;;;;;AAaA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,OAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,iBAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,kBAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,2BAAA,GAAAP,sBAAA,CAAAC,OAAA,kCAAsE,SAAAD,uBAAAQ,GAAA,UAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA,aAAAE,QAAAC,CAAA,oCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,iBAAAA,CAAA,eAAAA,CAAA,UAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,IAAAD,OAAA,CAAAC,CAAA,YAAAK,gBAAAC,QAAA,EAAAC,WAAA,SAAAD,QAAA,YAAAC,WAAA,cAAAC,SAAA,iDAAAC,kBAAAC,MAAA,EAAAC,KAAA,YAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,SAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,EAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,UAAAD,UAAA,CAAAE,YAAA,uBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAAO,GAAA,GAAAP,UAAA,aAAAQ,aAAAf,WAAA,EAAAgB,UAAA,EAAAC,WAAA,OAAAD,UAAA,EAAAd,iBAAA,CAAAF,WAAA,CAAAH,SAAA,EAAAmB,UAAA,MAAAC,WAAA,EAAAf,iBAAA,CAAAF,WAAA,EAAAiB,WAAA,EAAAN,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,kBAAAV,WAAA,WAAAa,eAAAK,CAAA,OAAAb,CAAA,GAAAc,YAAA,CAAAD,CAAA,+BAAA1B,OAAA,CAAAa,CAAA,IAAAA,CAAA,GAAAA,CAAA,gBAAAc,aAAAD,CAAA,EAAAE,CAAA,mBAAA5B,OAAA,CAAA0B,CAAA,MAAAA,CAAA,SAAAA,CAAA,KAAAG,CAAA,GAAAH,CAAA,CAAAxB,MAAA,CAAA4B,WAAA,iBAAAD,CAAA,OAAAhB,CAAA,GAAAgB,CAAA,CAAAE,IAAA,CAAAL,CAAA,EAAAE,CAAA,+BAAA5B,OAAA,CAAAa,CAAA,UAAAA,CAAA,WAAAJ,SAAA,uEAAAmB,CAAA,GAAAI,MAAA,GAAAC,MAAA,EAAAP,CAAA,IAnBtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXA,CAqBA;AACA;AACA;AACA;AACA,GAJA,IAKMQ,WAAW,6BACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KACI,SAAAA,YAAYC,aAAa,EAAEC,MAAM,EAAEC,UAAU,EAAE,CAAA/B,eAAA,OAAA4B,WAAA,EAE3CA,WAAW,CAACI,UAAU,CAAC,IAAI,EAAEH,aAAa,EAAEC,MAAM,EAAEC,UAAU,CAAC,CACnE,CAAC,CAED;AACJ;AACA;AACA;AACA,KAJI,OAAAd,YAAA,CAAAW,WAAA,WAAAZ,GAAA,gBAAAiB,KAAA,EAKA,SAAAD,WAAkBxC,GAAG,EAAEqC,aAAa,EAAEC,MAAM,EAAEC,UAAU,EAAE;MACtDvC,GAAG,CAAC,gBAAgB,CAAC,GAAGqC,aAAa;MACrCrC,GAAG,CAAC,QAAQ,CAAC,GAAGsC,MAAM;MACtBtC,GAAG,CAAC,YAAY,CAAC,GAAGuC,UAAU;IAClC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA,OANI,MAAAf,GAAA,yBAAAiB,KAAA;IAOA,SAAAC,oBAA2BC,IAAI,EAAE3C,GAAG,EAAE;MAClC,IAAI2C,IAAI,EAAE;QACN3C,GAAG,GAAGA,GAAG,IAAI,IAAIoC,WAAW,CAAC,CAAC;;QAE9B,IAAIO,IAAI,CAACC,cAAc,CAAC,gBAAgB,CAAC,EAAE;UACvC5C,GAAG,CAAC,gBAAgB,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,gBAAgB,CAAC,EAAE,QAAQ,CAAC;QACrF;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,eAAe,CAAC,EAAE;UACtC5C,GAAG,CAAC,eAAe,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,eAAe,CAAC,EAAE,CAACI,uBAAW,CAAC,CAAC;QACxF;QACA,IAAIJ,IAAI,CAACC,cAAc,CAAC,UAAU,CAAC,EAAE;UACjC5C,GAAG,CAAC,UAAU,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,UAAU,CAAC,EAAEtB,MAAM,CAAC;QACvE;QACA,IAAIsB,IAAI,CAACC,cAAc,CAAC,QAAQ,CAAC,EAAE;UAC/B5C,GAAG,CAAC,QAAQ,CAAC,GAAGgD,kBAAM,CAACN,mBAAmB,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,YAAY,CAAC,EAAE;UACnC5C,GAAG,CAAC,YAAY,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,YAAY,CAAC,EAAE,CAACM,qBAAS,CAAC,CAAC;QAChF;QACA,IAAIN,IAAI,CAACC,cAAc,CAAC,QAAQ,CAAC,EAAE;UAC/B5C,GAAG,CAAC,QAAQ,CAAC,GAAGkD,6BAAiB,CAACR,mBAAmB,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzE;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,OAAO,CAAC,EAAE;UAC9B5C,GAAG,CAAC,OAAO,CAAC,GAAGmD,4BAAgB,CAACT,mBAAmB,CAACC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtE;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,cAAc,CAAC,EAAE;UACrC5C,GAAG,CAAC,cAAc,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,cAAc,CAAC,EAAE,QAAQ,CAAC;QACjF;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,iBAAiB,CAAC,EAAE;UACxC5C,GAAG,CAAC,iBAAiB,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,iBAAiB,CAAC,EAAE,QAAQ,CAAC;QACvF;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,aAAa,CAAC,EAAE;UACpC5C,GAAG,CAAC,aAAa,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC;QAC/E;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,YAAY,CAAC,EAAE;UACnC5C,GAAG,CAAC,YAAY,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC;QAC7E;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,YAAY,CAAC,EAAE;UACnC5C,GAAG,CAAC,YAAY,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC;QAC3E;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,YAAY,CAAC,EAAE;UACnC5C,GAAG,CAAC,YAAY,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC;QAC3E;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,aAAa,CAAC,EAAE;UACpC5C,GAAG,CAAC,aAAa,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC;QAC/E;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC,EAAE;UAC3B5C,GAAG,CAAC,IAAI,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC;QAC7D;QACA,IAAIA,IAAI,CAACC,cAAc,CAAC,QAAQ,CAAC,EAAE;UAC/B5C,GAAG,CAAC,QAAQ,CAAC,GAAG6C,qBAAS,CAACC,aAAa,CAACH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAC,QAAQ,EAAE,CAACS,sCAA0B,CAAC,EAAC,CAAC;QACrG;MACJ;MACA,OAAOpD,GAAG;IACd,CAAC;;;;;AAKL;AACA;AACA;AACA;AACAoC,WAAW,CAAC7B,SAAS,CAAC,gBAAgB,CAAC,GAAG8C,SAAS;;AAEnD;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,eAAe,CAAC,GAAG8C,SAAS;;AAElD;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,UAAU,CAAC,GAAG8C,SAAS;;AAE7C;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,QAAQ,CAAC,GAAG8C,SAAS;;AAE3C;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,YAAY,CAAC,GAAG8C,SAAS;;AAE/C;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,QAAQ,CAAC,GAAG8C,SAAS;;AAE3C;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,OAAO,CAAC,GAAG8C,SAAS;;AAE1C;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,cAAc,CAAC,GAAG8C,SAAS;;AAEjD;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,iBAAiB,CAAC,GAAG8C,SAAS;;AAEpD;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,aAAa,CAAC,GAAG8C,SAAS;;AAEhD;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,YAAY,CAAC,GAAG8C,SAAS;;AAE/C;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,YAAY,CAAC,GAAG8C,SAAS;;AAE/C;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,YAAY,CAAC,GAAG8C,SAAS;;AAE/C;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,aAAa,CAAC,GAAG8C,SAAS;;AAEhD;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,IAAI,CAAC,GAAG8C,SAAS;;AAEvC;AACA;AACA;AACA;AACAjB,WAAW,CAAC7B,SAAS,CAAC,QAAQ,CAAC,GAAG8C,SAAS,CAAC,IAAAC,QAAA,GAAAC,OAAA;;;;;;;AAO7BnB,WAAW","ignoreList":[]}