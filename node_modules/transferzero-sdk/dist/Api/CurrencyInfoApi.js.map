{"version":3,"file":"CurrencyInfoApi.js","names":["_ApiClient","_interopRequireDefault","require","_CurrencyExchangeListResponse","_CurrencyListResponse","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","e","toPrimitive","call","String","Number","CurrencyInfoApi","exports","apiClient","ApiClient","value","infoCurrenciesWithHttpInfo","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","CurrencyListResponse","callApi","infoCurrencies","then","response_and_data","data","infoCurrenciesInWithHttpInfo","opts","CurrencyExchangeListResponse","infoCurrenciesIn","infoCurrenciesOutWithHttpInfo","infoCurrenciesOut"],"sources":["../../src/Api/CurrencyInfoApi.js"],"sourcesContent":["/**\n * TransferZero API\n * Reference documentation for the TransferZero API V1\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport CurrencyExchangeListResponse from '../Model/CurrencyExchangeListResponse';\nimport CurrencyListResponse from '../Model/CurrencyListResponse';\n\n/**\n* CurrencyInfo service.\n* @module Api/CurrencyInfoApi\n* @version 1.35.1\n*/\nexport default class CurrencyInfoApi {\n\n    /**\n    * Constructs a new CurrencyInfoApi. \n    * @alias module:Api/CurrencyInfoApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Getting a list of possible requested currencies\n     * Fetches a list of currencies available to use in other API requests. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:Model/CurrencyListResponse} and HTTP response\n     */\n    infoCurrenciesWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature'];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = CurrencyListResponse;\n      return this.apiClient.callApi(\n        '/info/currencies', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Getting a list of possible requested currencies\n     * Fetches a list of currencies available to use in other API requests. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/CurrencyListResponse}\n     */\n    infoCurrencies() {\n      return this.infoCurrenciesWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Getting a list of possible input currencies\n     * Fetches a list of currencies available to use as the input currency in other API requests. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier. Use this endpoint to determine the current exchange rate from a specific input currency to any output currency that's available. \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.senderId Allows the scoping of the results by `sender_id` (optional).  Example: `/v1/info/currencies/in?sender_id=26ec8517-2f0d-48c0-b74f-0bccb9ab3a87`\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:Model/CurrencyExchangeListResponse} and HTTP response\n     */\n    infoCurrenciesInWithHttpInfo(opts) {\n      opts = opts || {};\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n        'sender_id': opts['senderId']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature'];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = CurrencyExchangeListResponse;\n      return this.apiClient.callApi(\n        '/info/currencies/in', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Getting a list of possible input currencies\n     * Fetches a list of currencies available to use as the input currency in other API requests. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier. Use this endpoint to determine the current exchange rate from a specific input currency to any output currency that's available. \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.senderId Allows the scoping of the results by `sender_id` (optional).  Example: `/v1/info/currencies/in?sender_id=26ec8517-2f0d-48c0-b74f-0bccb9ab3a87`\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/CurrencyExchangeListResponse}\n     */\n    infoCurrenciesIn(opts) {\n      return this.infoCurrenciesInWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Getting a list of possible output currencies\n     * Fetches a list of currencies available to use as the output currency and their exchange rates against the available input currencies. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier. \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.senderId Allows the scoping of the results by `sender_id` (optional).  Example: `/v1/info/currencies/out?sender_id=26ec8517-2f0d-48c0-b74f-0bccb9ab3a87`\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:Model/CurrencyExchangeListResponse} and HTTP response\n     */\n    infoCurrenciesOutWithHttpInfo(opts) {\n      opts = opts || {};\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n        'sender_id': opts['senderId']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature'];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = CurrencyExchangeListResponse;\n      return this.apiClient.callApi(\n        '/info/currencies/out', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Getting a list of possible output currencies\n     * Fetches a list of currencies available to use as the output currency and their exchange rates against the available input currencies. Usually the 3-character alpha ISO 4217 currency code (eg. USD) is used as the identifier. \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.senderId Allows the scoping of the results by `sender_id` (optional).  Example: `/v1/info/currencies/out?sender_id=26ec8517-2f0d-48c0-b74f-0bccb9ab3a87`\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/CurrencyExchangeListResponse}\n     */\n    infoCurrenciesOut(opts) {\n      return this.infoCurrenciesOutWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"mappings":"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","ignoreList":[]}