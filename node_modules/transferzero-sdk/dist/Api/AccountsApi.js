"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;













var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _AccountListResponse = _interopRequireDefault(require("../Model/AccountListResponse"));
var _AccountResponse = _interopRequireDefault(require("../Model/AccountResponse"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);} /**
 * TransferZero API
 * Reference documentation for the TransferZero API V1
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */ /**
* Accounts service.
* @module Api/AccountsApi
* @version 1.35.1
*/var AccountsApi = exports["default"] = /*#__PURE__*/function () {/**
  * Constructs a new AccountsApi. 
  * @alias module:Api/AccountsApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */function AccountsApi(apiClient) {_classCallCheck(this, AccountsApi);this.apiClient = apiClient || _ApiClient["default"].instance;}
  /**
   * Fetches account balance for specified currrency
   * Fetches account balance for specified currrency, and returns current balance and associated currency code
   * @param {String} currency Currency code of account balance to fetch  Example: `/v1/accounts/USD`
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:Model/AccountResponse} and HTTP response
   */return _createClass(AccountsApi, [{ key: "getAccountWithHttpInfo", value:
    function getAccountWithHttpInfo(currency) {
      var postBody = null;
      // verify the required parameter 'currency' is set
      if (currency === undefined || currency === null) {
        throw new Error("Missing the required parameter 'currency' when calling getAccount");
      }

      var pathParams = {
        'Currency': currency
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _AccountResponse["default"];
      return this.apiClient.callApi(
        '/accounts/{Currency}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Fetches account balance for specified currrency
     * Fetches account balance for specified currrency, and returns current balance and associated currency code
     * @param {String} currency Currency code of account balance to fetch  Example: `/v1/accounts/USD`
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/AccountResponse}
     */ }, { key: "getAccount", value:
    function getAccount(currency) {
      return this.getAccountWithHttpInfo(currency).
      then(function (response_and_data) {
        return response_and_data.data;
      });
    }


    /**
     * Fetches account balances for all currencies
     * Fetches account balances for all currencies, and returns an array of the current balances and associated currency codes.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:Model/AccountListResponse} and HTTP response
     */ }, { key: "getAccountsWithHttpInfo", value:
    function getAccountsWithHttpInfo() {
      var postBody = null;

      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['AuthorizationKey', 'AuthorizationNonce', 'AuthorizationSecret', 'AuthorizationSignature'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _AccountListResponse["default"];
      return this.apiClient.callApi(
        '/accounts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Fetches account balances for all currencies
     * Fetches account balances for all currencies, and returns an array of the current balances and associated currency codes.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/AccountListResponse}
     */ }, { key: "getAccounts", value:
    function getAccounts() {
      return this.getAccountsWithHttpInfo().
      then(function (response_and_data) {
        return response_and_data.data;
      });
    } }]);}();
//# sourceMappingURL=AccountsApi.js.map